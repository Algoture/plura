name: Lint and Test

on:
  push:
    branches:
      - main
      - 'feature/*'
      - 'bugfix/*'
  pull_request:
    branches:
      - main
      - 'feature/*'
      - 'bugfix/*'

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '21.7.1'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --shamefully-hoist

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js (again to ensure pnpm is available)
        uses: actions/setup-node@v2
        with:
          node-version: '21.7.1'

      - name: Install pnpm (again in case the previous job isolated the environment)
        run: npm install -g pnpm

      - name: Install Turbo CLI
        run: npm install -g turbo

      - name: Run Lint
        run: pnpm lint

  test:
    runs-on: ubuntu-latest
    needs: [setup, lint]
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      RESEND_API: ${{ secrets.RESEND_API }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up .env file for tests
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> apps/api/.env
          echo "RESEND_API=${{ secrets.RESEND_API }}" >> apps/api/.env

      - name: Set up Node.js (again to ensure pnpm is available)
        uses: actions/setup-node@v2
        with:
          node-version: '21.7.1'

      - name: Run Tests
        run: pnpm test
